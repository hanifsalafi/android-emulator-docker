version: "3.8"
services:
  redroid:
    image: redroid/redroid:11.0.0-latest
    container_name: android-redroid
    privileged: true
    ports:
      - "5555:5555"   # ADB port
    environment:
      - DISPLAY=:0
    volumes:
      - /dev/kvm:/dev/kvm
      - /dev/video10:/dev/video10
      - redroid_data:/data
    networks:
      - redroid-network

  websocket:
    build: ../ws-server
    container_name: redroid-controller
    privileged: true
    ports:
      - "3000:3000"
    environment:
      - REDROID_HOST=38.47.180.165
      - REDROID_PORT=5555
    volumes:
      - /tmp:/tmp
    depends_on:
      - redroid
    networks:
      - redroid-network

  frontend:
    build: ../frontend
    container_name: redroid-frontend
    ports:
      - "8050:80"
    depends_on:
      - websocket
    networks:
      - redroid-network

  # Service for Redroid display using ADB screenshots
  redroid-display:
    image: ubuntu:20.04
    container_name: redroid-display
    privileged: true
    ports:
      - "6080:6080"
    environment:
      - DISPLAY=:0
    volumes:
      - /dev/kvm:/dev/kvm
      - ./display-app.py:/app/app.py
      - /tmp:/tmp  # Share ADB server socket
    depends_on:
      - redroid
      - websocket
    networks:
      - redroid-network
    command: >
      /bin/bash -c "
        apt-get update && apt-get install -y wget curl python3 python3-pip &&
        apt-get install -y android-tools-adb &&
        pip3 install flask flask-cors &&
        mkdir -p /app &&
        cd /app &&
        # Wait for ADB server to be ready
        sleep 45 &&
        # Connect to ADB server from redroid-controller
        adb connect 38.47.180.165:5037 &&
        # Connect to Redroid device
        adb connect 38.47.180.165:5555 &&
        python3 app.py
      "

volumes:
  redroid_data:

networks:
  redroid-network:
    driver: bridge 